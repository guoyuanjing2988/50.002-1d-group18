/*
   This file was generated automatically by the Mojo IDE version B1.3.4.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg spi_miso,
    output reg [3:0] spi_channel,
    output reg avr_rx,
    output reg [23:0] io_led,
    output reg [7:0] led,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [24-1:0] M_myalu_io_led;
  wire [8-1:0] M_myalu_led;
  alu_1 myalu (
    .a(io_dip[0+7-:8]),
    .b(io_dip[8+7-:8]),
    .alufn(io_dip[16+0+5-:6]),
    .io_led(M_myalu_io_led),
    .led(M_myalu_led)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [8-1:0] M_my_test_a_out;
  wire [8-1:0] M_my_test_b_out;
  wire [8-1:0] M_my_test_out;
  wire [6-1:0] M_my_test_alufn;
  test_case_3 my_test (
    .clk(clk),
    .rst(rst),
    .a_out(M_my_test_a_out),
    .b_out(M_my_test_b_out),
    .out(M_my_test_out),
    .alufn(M_my_test_alufn)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    if (io_dip[16+7+0-:1] == 1'h0) begin
      io_led[16+7-:8] = M_myalu_io_led[16+7-:8];
      io_led[8+7-:8] = io_dip[8+7-:8];
      io_led[0+7-:8] = io_dip[0+7-:8];
      led = M_myalu_led;
    end else begin
      io_led[16+7-:8] = M_my_test_alufn;
      io_led[8+7-:8] = M_my_test_b_out;
      io_led[0+7-:8] = M_my_test_a_out;
      led = M_my_test_out;
    end
  end
endmodule
